{"version":3,"sources":["webpack://tyler-auer-portfolio/./src/components/Flex.tsx","webpack://tyler-auer-portfolio/./src/components/Header.tsx","webpack://tyler-auer-portfolio/./src/components/Footer.tsx","webpack://tyler-auer-portfolio/./src/components/PageBox.tsx","webpack://tyler-auer-portfolio/./src/components/PostPreview.tsx","webpack://tyler-auer-portfolio/./src/elements/Chip.tsx"],"names":["FlexJustification","Flex","children","flex","even","direction","wrap","align","id","className","sx","css","CONTAINER_SX","spacing","NAME_SX","Header","includeHomeLink","Box","NameAndShortBio","IconNavList","level","Footer","s","vMargin","PageBox","PostPreview","post","role","hLevel","frontmatter","title","subtitle","category","tags","location","fields","blog","path","titleCss","subtitleCss","categoryCss","A","to","length","map","tag","toLowerCase","Chip","dataTestId","color","font","data-testid"],"mappings":"iMAKYA,E,oBAAAA,K,sBAAAA,E,oBAAAA,E,gBAAAA,E,eAAAA,M,KAcL,IAAMC,EAAwB,SAAC,GAAD,IACnCC,EADmC,EACnCA,SADmC,IAEnCC,YAFmC,MAE5BH,EAAkBI,KAFU,MAGnCC,iBAHmC,MAGvB,MAHuB,MAInCC,YAJmC,MAI5B,OAJ4B,MAKnCC,aALmC,MAK3B,SAL2B,EAMnCC,EANmC,EAMnCA,GACAC,EAPmC,EAOnCA,UACAC,EARmC,EAQnCA,GARmC,OAUnC,eACEF,GAAIA,EACJC,UAAWA,EACXE,KAAKA,QAAF,gCAEkBR,EAFlB,mBAGiBE,EAHjB,IAKCC,EAAO,cAAcA,EAAjB,IAA2B,GALhC,IAMCC,EAAQ,gBAAgBA,EAAnB,IAA8B,GANpC,IAOCG,EAPD,SAUFR,K,wHCpCL,IAAMU,GAAeD,QAAH,wEAINE,UAJM,UAOZC,EAAU,CAAH,4DAUN,SAASC,EAAT,GAAuD,QAArCC,uBAAqC,SAC5D,OACE,uBACE,QAACC,EAAA,EAAD,CAAKP,GAAIE,IACP,QAACM,EAAD,OACA,QAACC,EAAA,EAAD,CAAaH,gBAAiBA,MAMtC,IAAME,EAAkB,kBACtB,oBACE,QAAC,IAAD,CAASR,GAAII,EAASM,MAAO,GAA7B,eAGA,0D,gWC7BG,SAASC,EAAT,GAAuD,QAArCL,uBAAqC,SACtDM,EAAI,EA8BV,OACE,uBACE,QAACL,EAAA,EAAD,CAAKP,GAAIY,EAAGC,QAAS,SACnB,oBACE,eAAKd,UAAU,QAAf,eACA,eAAKA,UAAU,QAAf,8BAEF,QAACU,EAAA,EAAD,CAAaH,gBAAiBA,M,kJCnC/B,SAASQ,EAAT,GAAkE,IAA/CtB,EAA+C,EAA/CA,SAA+C,IAArCc,uBAAqC,SACvE,OACE,QAACC,EAAA,EAAD,CACEP,GAAE,IAOF,QAACO,EAAA,EAAD,CACEP,GAAE,IAIF,QAACK,EAAD,CAAQC,gBAAiBA,IACxBd,IAEH,QAACmB,EAAD,CAAQL,gBAAiBA,O,+lBCHlBS,EAA+B,SAAC,GAA+B,IAA7BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,KAAuB,IAAjBC,cAAiB,MAAR,EAAQ,EAC1E,EAAsDF,EAAKG,YAAnDC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,SAAUC,EAAnC,EAAmCA,KACnC,GADA,EAAyCC,SAClBR,EAAKS,QAApBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KAERC,EAAW,EAeXC,EAAc,EAKdC,EAAc,EAcpB,OACE,mBACE7B,KAAKA,QAAF,UACSE,QADT,UAGHc,KAAMA,IAEN,QAAC,IAAD,CACEjB,GAAE,EAGFP,KAAMH,UACNM,KAAM,iBAEN,oBACE,QAAC,EAAAmC,EAAD,CAAGC,GAAIL,IACL,QAAC,IAAD,CAASjB,MAAOQ,EAAQjB,IAAK2B,GAC1BR,KAGL,eAAKnB,IAAK4B,GAAcR,KACrBE,EAAKU,SACN,mBACGV,EAAKW,KAAI,SAACC,GAAD,OACR,QAAC,IAAD,CAAMH,GAAE,IAAMN,EAAN,QAAkBS,EAAIC,eAAkBD,SAKxD,QAAC,EAAAJ,EAAD,CAAG9B,IAAK6B,EAAaE,GAAE,IAAMN,EAAN,aAAuBJ,EAASc,eACpDd,O,mGCpFEe,EAAO,SAAC,GAA+D,IAA7D7C,EAA6D,EAA7DA,SAAUwC,EAAmD,EAAnDA,GAAIhC,EAA+C,EAA/CA,GAAIF,EAA2C,EAA3CA,GAAIC,EAAuC,EAAvCA,UAAWuC,EAA4B,EAA5BA,WAChD1B,GAAIX,QAAH,uEAISsC,eAJT,6CAOIA,cAPJ,gBAQUC,iBARV,kHAkBWD,oBAlBX,iBAuBHvC,EAvBG,QA0BP,OAAOgC,GACL,QAAC,EAAAD,EAAD,CAAG/B,GAAIY,EAAGd,GAAIA,EAAI2C,cAAaH,EAAYvC,UAAWA,EAAWiC,GAAIA,GAClExC,IAGH,eAAKS,IAAKW,EAAGd,GAAIA,EAAI2C,cAAaH,EAAYvC,UAAWA,GACtDP","file":"8625b132899f4e1bc66a0a2601b71a1ea4cfe3af-a83d26e272a7e5f0fd88.js","sourcesContent":["import React from 'react';\nimport { css } from '@emotion/react';\n\nimport { ElementProps } from '@/types';\n\nexport enum FlexJustification {\n  split = 'space-between',\n  even = 'space-around',\n  center = 'center',\n  start = 'start',\n}\n\ntype Props = {\n  flex?: FlexJustification;\n  direction?: 'rows' | 'col';\n  wrap?: 'wrap' | 'nowrap' | 'wrap-reverse';\n  align?: 'center';\n} & ElementProps;\n\nexport const Flex: React.FC<Props> = ({\n  children,\n  flex = FlexJustification.even,\n  direction = 'row',\n  wrap = 'wrap',\n  align = 'center',\n  id,\n  className,\n  sx,\n}) => (\n  <div\n    id={id}\n    className={className}\n    css={css`\n      display: flex;\n      justify-content: ${flex};\n      flex-direction: ${direction};\n\n      ${wrap ? `flex-wrap: ${wrap};` : ''}\n      ${align ? `align-items: ${align};` : ''}\n      ${sx}\n    `}\n  >\n    {children}\n  </div>\n);\n","import { css } from '@emotion/react';\nimport { Box } from '@/elements/Box';\nimport { spacing } from '@/constants';\nimport { IconNavList } from './IconNavList';\nimport { A, Heading } from '@/elements';\n\nconst CONTAINER_SX = css`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: ${spacing.xxxl} 0;\n`;\n\nconst NAME_SX = css`\n  margin: 0;\n  line-height: 1.2;\n  width: auto;\n`;\n\ntype PropsType = {\n  includeHomeLink?: boolean;\n};\n\nexport function Header({ includeHomeLink = true }: PropsType) {\n  return (\n    <header>\n      <Box sx={CONTAINER_SX}>\n        <NameAndShortBio />\n        <IconNavList includeHomeLink={includeHomeLink} />\n      </Box>\n    </header>\n  );\n}\n\nconst NameAndShortBio = () => (\n  <div>\n    <Heading sx={NAME_SX} level={1}>\n      Tyler Auer\n    </Heading>\n    <div>Teacher turned software developer</div>\n  </div>\n);\n","import { css } from '@emotion/react';\n\nimport { Box } from '@/elements/Box';\nimport { spacing } from '@/constants';\nimport { IconNavList } from './IconNavList';\n\ntype PropsType = {\n  includeHomeLink?: boolean;\n};\n\nexport function Footer({ includeHomeLink = true }: PropsType) {\n  const s = css`\n    margin: 20rem auto 5rem auto;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    & div {\n      & .name {\n        font-size: 3rem;\n        color: var(--color-punch);\n        font-family: var(--font-special);\n        line-height: 1;\n      }\n      & .desc {\n        font-style: italic;\n      }\n    }\n\n    & nav {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    & img {\n      width: 2.5rem;\n      margin: 1rem 2.5rem;\n    }\n  `;\n\n  return (\n    <footer>\n      <Box sx={s} vMargin={'xxxl'}>\n        <div>\n          <div className=\"name\">Tyler Auer</div>\n          <div className=\"desc\">Teacher turned developer</div>\n        </div>\n        <IconNavList includeHomeLink={includeHomeLink} />\n      </Box>\n    </footer>\n  );\n}\n","import { css } from '@emotion/react';\n\nimport { Box } from '@/elements/Box';\nimport { Header } from '@/components/Header';\nimport { Footer } from '@/components/Footer';\n\ntype PropsType = {\n  children: JSX.Element;\n  includeHomeLink?: boolean;\n};\n\n// Wraps the contents of a page and adds a Header and Footer such that the Footer\n// is always at the bottom of the window or the bottom of the document whatever is lower\nexport function PageBox({ children, includeHomeLink = true }: PropsType) {\n  return (\n    <Box\n      sx={css`\n        display: flex;\n        flex-direction: column;\n        justify-content: start;\n        min-height: 100vh;\n      `}\n    >\n      <Box\n        sx={css`\n          flex-grow: 1;\n        `}\n      >\n        <Header includeHomeLink={includeHomeLink} />\n        {children}\n      </Box>\n      <Footer includeHomeLink={includeHomeLink} />\n    </Box>\n  );\n}\n","import { css } from '@emotion/react';\n\nimport { Chip } from '@/elements/Chip';\nimport { Flex, FlexJustification } from '@/components/Flex';\nimport { Heading, A } from '@/elements';\n\nimport { spacing } from '@/constants';\n\ntype PostPreviewType = {\n  frontmatter: {\n    title: string;\n    subtitle: string;\n    category: string;\n    tags: string[];\n    location: string;\n  };\n  fields: {\n    blog: string;\n    path: string;\n  };\n};\n\ntype Props = {\n  post: PostPreviewType;\n  role?: string;\n  hLevel?: 2 | 3 | 4;\n};\n\nexport const PostPreview: React.FC<Props> = ({ post, role, hLevel = 2 }) => {\n  const { title, subtitle, category, tags, location } = post.frontmatter;\n  const { blog, path } = post.fields;\n\n  const titleCss = css`\n    font-style: normal;\n    font-weight: bold;\n    margin: 0 2rem 0 0;\n    width: auto;\n\n    &:hover {\n      color: var(--color-punch);\n    }\n\n    &:visited {\n      color: inherit;\n    }\n  `;\n\n  const subtitleCss = css`\n    font-size: 1.6rem;\n    font-style: italic;\n  `;\n\n  const categoryCss = css`\n    font-family: var(--font-special);\n    color: var(--color-punch);\n    font-size: 1.6rem;\n    text-align: left;\n    border-color: transparent;\n    font-weight: 600;\n\n    &:hover {\n      border-color: var(--color-punch);\n      color: var(--color-punch-dark);\n    }\n  `;\n\n  return (\n    <article\n      css={css`\n        margin: ${spacing.xl} 0;\n      `}\n      role={role}\n    >\n      <Flex\n        sx={css`\n          width: 100%;\n        `}\n        flex={FlexJustification.split}\n        wrap={'wrap-reverse'}\n      >\n        <div>\n          <A to={path}>\n            <Heading level={hLevel} css={titleCss}>\n              {title}\n            </Heading>\n          </A>\n          <div css={subtitleCss}>{subtitle}</div>\n          {!!tags.length && (\n            <div>\n              {tags.map((tag) => (\n                <Chip to={`/${blog}/tag/${tag.toLowerCase()}`}>{tag}</Chip>\n              ))}\n            </div>\n          )}\n        </div>\n        <A css={categoryCss} to={`/${blog}/category/${category.toLowerCase()}`}>\n          {category}\n        </A>\n      </Flex>\n    </article>\n  );\n};\n","import { ReactNode } from 'react';\nimport { css } from '@emotion/react';\nimport { ElementProps } from '@/types';\n\nimport { A } from '@/elements/A';\nimport { color, font } from '@/constants';\n\ntype ChipProps = {\n  to?: string;\n  children: ReactNode;\n} & ElementProps;\n\nexport const Chip = ({ children, to, sx, id, className, dataTestId }: ChipProps) => {\n  const s = css`\n    padding: 2px 1rem 0 1rem;\n    display: inline-block;\n    border: none;\n    background: ${color.bgPrimary};\n    border-radius: 3px;\n    font-size: 1.2rem;\n    color: ${color.fontBase};\n    font-family: ${font.family.chip};\n    cursor: pointer;\n    transition: all 0.2s;\n    font-weight: 400;\n\n    &:not(:last-of-type) {\n      margin-right: 1rem;\n    }\n\n    &:hover {\n      background: ${color.bgPrimaryHover};\n      color: black;\n    }\n\n    // Pass any styles on and override defaults\n    ${sx}\n  `;\n\n  return to ? (\n    <A sx={s} id={id} data-testid={dataTestId} className={className} to={to}>\n      {children}\n    </A>\n  ) : (\n    <div css={s} id={id} data-testid={dataTestId} className={className}>\n      {children}\n    </div>\n  );\n};\n"],"sourceRoot":""}
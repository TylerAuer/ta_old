{"version":3,"sources":["webpack://tyler-auer-portfolio/./src/components/landing_page/Projects.tsx","webpack://tyler-auer-portfolio/./src/components/landing_page/Bio.tsx","webpack://tyler-auer-portfolio/./src/components/Button.tsx","webpack://tyler-auer-portfolio/./src/components/landing_page/Blogs.tsx","webpack://tyler-auer-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.js","webpack://tyler-auer-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.js","webpack://tyler-auer-portfolio/./node_modules/framer-motion/dist/es/utils/use-force-update.js","webpack://tyler-auer-portfolio/./node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/crossfader.js","webpack://tyler-auer-portfolio/./node_modules/framer-motion/dist/es/animation/animate.js","webpack://tyler-auer-portfolio/./node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/stack.js","webpack://tyler-auer-portfolio/./node_modules/framer-motion/dist/es/components/AnimateSharedLayout/index.js","webpack://tyler-auer-portfolio/./node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/rotate.js","webpack://tyler-auer-portfolio/./src/components/landing_page/TruthsAndLies.tsx","webpack://tyler-auer-portfolio/./src/utils/get_letter_grade.ts","webpack://tyler-auer-portfolio/./src/pages/index.tsx"],"names":["CONTAINER_SX","css","spacing","PROJECT_NAME_SX","CHIP_SX","ICON_SX","color","Projects","role","id","level","Project","title","desc","chips","text","to","icon","A","Box","sx","Flex","flex","FlexJustification","map","chip","Chip","Icon","Bio","Button","children","className","s","SECTION_SX","BTN_SX","TITLE_ICON_SX","Blogs","posts","featCodePosts","filter","post","fields","blog","featAdventurePosts","Fragment","FeaturedPosts","PostPreview","hLevel","key","path","presenceId","getPresenceId","PresenceChild","_a","initial","isPresent","_onExitComplete","onExitComplete","custom","presenceAffectsLayout","presenceChildren","newChildrenMap","context","useMemo","childId","set","allComplete","forEach","isComplete","register","delete","undefined","_","size","PresenceContext","value","Map","getChildKey","child","AnimatePresence","_b","exitBeforeEnter","_c","forceRender","unloadingRef","useRef","useState","forcedRenderCount","setForcedRenderCount","current","useCallback","useForceUpdate","layoutContext","useContext","SharedLayoutContext","forceUpdate","isInitialRender","filteredChildren","filtered","Children","isValidElement","push","onlyElements","presentChildren","allChildren","exiting","Set","updateChildLookup","childrenToRender","presentKeys","targetKeys","numPresent","length","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","createCrossfader","progress","options","lead","follow","crossfadeOpacity","preserveFollowOpacity","prevOptions","leadState","followState","_isActive","finalCrossfadeFrame","prevUpdate","startCrossfadeAnimation","target","transition","hasUpdated","onUpdate","scheduleRender","_onComplete","timestamp","from","stop","animate","onComplete","updateCrossfade","latestLeadValues","getLatestValues","Object","assign","latestFollowValues","prevValues","p","leadTargetOpacity","opacity","followTargetOpacity","mix","isVisible","easeCrossfadeIn","easeCrossfadeOut","hasFollowElement","numBorders","borderLabel","borders","followRadius","getRadius","leadRadius","radius","Math","max","rotate","backgroundColor","mixValues","Boolean","isActive","fromLead","toLead","initialProgress","reset","getCrossfadeState","element","setOptions","newOptions","compress","min","easing","values","radiusName","borderRadius","layoutStack","prevViewportBox","prevDragCursor","stack","state","leadIsExiting","prevState","crossfader","needsCrossfadeAnimation","setCrossfader","remove","getLead","updateSnapshot","dragControls","isDragging","cursorProgress","clearSnapshot","updateLeadAndFollow","order","Array","presence","isPresenceRoot","shouldCrossfade","pointTo","setVisibility","config","prevParent","getProjectionParent","originBox","targetBox","getLayoutState","layout","getFollowLayout","getDefaultTransition","notifyLayoutReady","AnimateSharedLayout","_super","_this","apply","this","arguments","stacks","hasMounted","updateScheduled","renderScheduled","syncContext","syncUpdate","force","scheduleUpdate","addChild","removeChild","prototype","componentDidMount","componentDidUpdate","startLayoutAnimation","shouldComponentUpdate","type","props","updateStacks","handler","layoutReady","getLayoutId","getStack","parent","visualElement","flush","hasRotate","resetValues","transform","hasValue","getStaticValue","setStaticValue","syncRender","resetRotate","shouldResetTransform","resetTransform","addToStack","removeFromStack","render","contextType","MotionContext","scoreContainerCss","scorePlaceholderCss","scoreCss","font","tolRowCss","statementCss","chooserContainerCss","chooserOptionCss","slashCss","correctnessCss","TruthsAndLies","tolToShow","useTolsToShow","rightNode","Score","tol","TruthOrLieRow","truthOrLie","truthOrLieRowVariants","delay","duration","exit","motion","statement","variants","TruthOrLieChooser","TruthOrLieCorrectness","tolChooserVariants","noAnimation","hoverLie","scale","x","hoverTruth","y","tap","handleAnswer","useTolHandleAnswer","isAnswered","userCorrectness","showTruthOption","truthyness","showFalseOption","handleClick","userAnswer","TruthOption","disableAnimations","LiarOption","whileHover","whileTap","onClick","scoreVariants","correctCount","useTolCorrectCount","incorrectCount","useTolIncorrectCount","uniqueID","letterGrade","correct","incorrect","letter","percent","round","getLetterGrade","aria-hidden","style","zIndex","correctnessVariants","userIsCorrect","data","allMdx","nodes","GlobalStyles","Helmet","name","content","PageBox","includeHomeLink"],"mappings":"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","file":"component---src-pages-index-tsx-8cf036c03811b6272fad.js","sourcesContent":["import React from 'react';\nimport { color, spacing } from '@/constants';\nimport { A, Heading } from '@/elements';\nimport { Box } from '@/elements/Box';\nimport { Icon } from '@/elements/Icon';\nimport { css } from '@emotion/react';\nimport { ReactNode } from 'react';\nimport { Chip } from '../../elements/Chip';\nimport { Flex, FlexJustification } from '../Flex';\nimport { IconType } from '@/elements/Icon';\n\nconst CONTAINER_SX = css`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: ${spacing.xl} 0;\n`;\n\nconst PROJECT_NAME_SX = css`\n  margin: 0.5rem 1.5rem 0.5rem 0;\n`;\n\nconst CHIP_SX = css`\n  padding: 3px 1rem 2px 1rem;\n`;\n\nconst ICON_SX = css`\n  width: 5rem;\n  flex-shrink: 0;\n  margin-left: 3rem;\n  fill: ${color.icon};\n`;\n\nexport function Projects() {\n  return (\n    <section role=\"list\" id=\"projects\">\n      <Heading level={2}>Projects</Heading>\n      <Project\n        title=\"Bad Calculators\"\n        desc={\n          <>\n            Mathy puzzles on pitiful, miserable calculators. These brain melters are addictive: ~5K\n            users have amassed over 150k puzzle attempts. Bring a pencil (or a BFS algorithm).\n          </>\n        }\n        chips={[\n          { text: 'Live', to: 'https://badcalculators.com' },\n          { text: 'Source', to: 'https://github.com/TylerAuer/bad-calculators' },\n        ]}\n        icon=\"calculator\"\n      />\n\n      <Project\n        title=\"Super Stupid Props\"\n        desc={\n          <>\n            A Super Bowl props game where players optionally contribute to a community pot donated\n            to a charity of the winner's choosing. In 2021 we donated $1,568 to the Pancreatic\n            Cancer Action Network!{' '}\n            <A to=\"https://docs.google.com/forms/d/e/1FAIpQLSddqaaSxbJne8yJ7XNdAsxFPC68cmjq2aHG6IpHRqRmZKnYAg/viewform\">\n              Sign up\n            </A>{' '}\n            to play next year; donations optional.\n          </>\n        }\n        chips={[\n          {\n            text: 'Sign up',\n            to:\n              'https://docs.google.com/forms/d/e/1FAIpQLSddqaaSxbJne8yJ7XNdAsxFPC68cmjq2aHG6IpHRqRmZKnYAg/viewform',\n          },\n          { text: 'Source', to: 'https://github.com/TylerAuer/super-bowl-props-lv' },\n        ]}\n        icon=\"football\"\n      />\n\n      <Project\n        title=\"Fruit Matrix\"\n        desc={\n          <>\n            Drag-and-drop fruit on a two-axis graph to rate each's tastiness and ease of eating.\n            Submit your ratings and get hit with a smorgasbord of unnecessarily involved{' '}\n            <A to=\"https://fruit.tylerauer.com/#/data/#histograms\">charts</A> aggregating every\n            rating the site has ever seen.\n          </>\n        }\n        chips={[\n          { text: 'Live', to: 'https://fruit.tylerauer.com' },\n          { text: 'Data', to: 'https://fruit.tylerauer.com/#/data' },\n          { text: 'Source', to: 'https://github.com/TylerAuer/fruit' },\n        ]}\n        icon=\"fruit\"\n      />\n\n      <Project\n        title=\"Bookshelf\"\n        desc={\n          <>\n            {' '}\n            A big 'ol pile of my favorite books presented in a slick masonry grid with filters for\n            themes and genres.\n          </>\n        }\n        chips={[{ text: 'Live', to: '/bookshelf' }]}\n        icon=\"book\"\n      />\n    </section>\n  );\n}\n\ntype ChipParts = {\n  to: string;\n  text: string;\n};\n\ntype ProjectProps = {\n  title: string;\n  desc: ReactNode;\n  chips: ChipParts[];\n  icon: keyof typeof IconType;\n};\n\nfunction Project({ title, desc, chips, icon }: ProjectProps) {\n  return (\n    <Box role=\"listitem\" sx={CONTAINER_SX}>\n      <div>\n        <Flex flex={FlexJustification.start}>\n          <Heading sx={PROJECT_NAME_SX} level={3}>\n            {title}\n          </Heading>\n          <div>\n            {chips.map((chip) => (\n              <Chip sx={CHIP_SX} to={chip.to}>\n                {chip.text}\n              </Chip>\n            ))}\n          </div>\n        </Flex>\n        <p>{desc}</p>\n      </div>\n      <Icon icon={icon} sx={ICON_SX} />\n    </Box>\n  );\n}\n","import { A } from '@/elements';\n\nexport const Bio = () => (\n  <section id=\"name-and-bio\">\n    <p>\n      After teaching math for twelve years, I taught myself to code. Now I work at{' '}\n      <A to=\"http://nextdoor.com\">Nextdoor</A>, building tools that help users share their\n      personalities and protect their identities.\n    </p>\n    <p>\n      When not staring at a screen I enjoy reading sci-fi and fantasy series, making puzzles,\n      playing board games, and long walks on exposed ridgelines.\n    </p>\n  </section>\n);\n","import React, { ReactNode } from 'react';\nimport { css } from '@emotion/react';\n\nimport { ElementProps } from '@/types';\nimport { A } from '@/elements/A';\n\ntype ButtonProps = {\n  to: string;\n  children: ReactNode;\n} & ElementProps;\n\nexport const Button = ({ children, to, sx, id, className }: ButtonProps) => {\n  const s = css`\n    padding: 1rem 2rem;\n    border: none;\n    background: var(--color-grey-bg);\n    border-radius: 3rem;\n    font-size: 1.3rem;\n    color: #282828;\n    font-family: var(--font-special);\n    cursor: pointer;\n    transition: all 0.2s;\n    font-weight: 400;\n\n    &:hover {\n      background: var(--color-punch-soft);\n      color: black;\n    }\n\n    // Pass any styles on and override defaults\n    ${sx}\n  `;\n\n  return (\n    <A id={id} className={className} css={s} to={to}>\n      {children}\n    </A>\n  );\n};\n","import { Fragment } from 'react';\nimport { spacing } from '@/constants';\nimport { A, Heading } from '@/elements';\nimport { Box } from '@/elements/Box';\nimport { Icon } from '@/elements/Icon';\nimport { css } from '@emotion/react';\nimport { Button } from '../Button';\nimport { PostPreview } from '../PostPreview';\n\nconst SECTION_SX = css`\n  margin-bottom: ${spacing.xxl};\n`;\n\nconst BTN_SX = css`\n  text-align: center;\n  margin: ${spacing.xl} 0;\n`;\n\nconst TITLE_ICON_SX = css`\n  width: 3.5rem;\n  margin-right: 2rem;\n  vertical-align: middle;\n`;\n\nexport const Blogs = ({ posts }) => {\n  const featCodePosts = posts.filter((post) => post.fields.blog === 'code');\n  const featAdventurePosts = posts.filter((post) => post.fields.blog === 'adventure');\n\n  return (\n    <Fragment>\n      <section css={SECTION_SX} id=\"code-posts\">\n        <Box>\n          <A to=\"/code\">\n            <Heading level={2}>\n              <Icon sx={TITLE_ICON_SX} icon=\"code\" />\n              Code\n            </Heading>\n          </A>\n        </Box>\n        <FeaturedPosts posts={featCodePosts} />\n        <div css={BTN_SX}>\n          <Button to=\"/code\">All code posts</Button>\n        </div>\n      </section>\n\n      <section css={SECTION_SX} id=\"adventure-posts\">\n        <Box>\n          <A to=\"/adventure\">\n            <Heading level={2}>\n              <Icon sx={TITLE_ICON_SX} icon=\"mountains\" />\n              Adventure\n            </Heading>\n          </A>\n        </Box>\n        <FeaturedPosts posts={featAdventurePosts} />\n        <div css={BTN_SX}>\n          <Button to=\"/adventure\">All adventure posts</Button>\n        </div>\n      </section>\n    </Fragment>\n  );\n};\n\nfunction FeaturedPosts({ posts }) {\n  return (\n    <Box role=\"list\">\n      {posts.map((post) => (\n        <PostPreview hLevel={3} role=\"listitem\" key={post.fields.path} post={post} />\n      ))}\n    </Box>\n  );\n}\n","import * as React from 'react';\nimport { useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.js';\nimport { useConstant } from '../../utils/use-constant.js';\nvar presenceId = 0;\n\nfunction getPresenceId() {\n  var id = presenceId;\n  presenceId++;\n  return id;\n}\n\nvar PresenceChild = function PresenceChild(_a) {\n  var children = _a.children,\n      initial = _a.initial,\n      isPresent = _a.isPresent,\n      _onExitComplete = _a.onExitComplete,\n      custom = _a.custom,\n      presenceAffectsLayout = _a.presenceAffectsLayout;\n  var presenceChildren = useConstant(newChildrenMap);\n  var id = useConstant(getPresenceId);\n  var context = useMemo(function () {\n    return {\n      id: id,\n      initial: initial,\n      isPresent: isPresent,\n      custom: custom,\n      onExitComplete: function onExitComplete(childId) {\n        presenceChildren.set(childId, true);\n        var allComplete = true;\n        presenceChildren.forEach(function (isComplete) {\n          if (!isComplete) allComplete = false;\n        });\n        allComplete && (_onExitComplete === null || _onExitComplete === void 0 ? void 0 : _onExitComplete());\n      },\n      register: function register(childId) {\n        presenceChildren.set(childId, false);\n        return function () {\n          return presenceChildren.delete(childId);\n        };\n      }\n    };\n  },\n  /**\n   * If the presence of a child affects the layout of the components around it,\n   * we want to make a new context value to ensure they get re-rendered\n   * so they can detect that layout change.\n   */\n  presenceAffectsLayout ? undefined : [isPresent]);\n  useMemo(function () {\n    presenceChildren.forEach(function (_, key) {\n      return presenceChildren.set(key, false);\n    });\n  }, [isPresent]);\n  /**\n   * If there's no `motion` components to fire exit animations, we want to remove this\n   * component immediately.\n   */\n\n  React.useEffect(function () {\n    !isPresent && !presenceChildren.size && (_onExitComplete === null || _onExitComplete === void 0 ? void 0 : _onExitComplete());\n  }, [isPresent]);\n  return React.createElement(PresenceContext.Provider, {\n    value: context\n  }, children);\n};\n\nfunction newChildrenMap() {\n  return new Map();\n}\n\nexport { PresenceChild };","import { __spreadArray, __read } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.js';\nimport { PresenceChild } from './PresenceChild.js';\nimport { SharedLayoutContext, isSharedLayout } from '../../context/SharedLayoutContext.js';\n\nfunction getChildKey(child) {\n  return child.key || \"\";\n}\n\nfunction updateChildLookup(children, allChildren) {\n  var seenChildren = process.env.NODE_ENV !== \"production\" ? new Set() : null;\n  children.forEach(function (child) {\n    var key = getChildKey(child);\n\n    if (process.env.NODE_ENV !== \"production\" && seenChildren) {\n      if (seenChildren.has(key)) {\n        console.warn(\"Children of AnimatePresence require unique keys. \\\"\" + key + \"\\\" is a duplicate.\");\n      }\n\n      seenChildren.add(key);\n    }\n\n    allChildren.set(key, child);\n  });\n}\n\nfunction onlyElements(children) {\n  var filtered = []; // We use forEach here instead of map as map mutates the component key by preprending `.$`\n\n  Children.forEach(children, function (child) {\n    if (isValidElement(child)) filtered.push(child);\n  });\n  return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * @library\n *\n * Any `Frame` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { Frame, AnimatePresence } from 'framer'\n *\n * // As items are added and removed from `items`\n * export function Items({ items }) {\n *   return (\n *     <AnimatePresence>\n *       {items.map(item => (\n *         <Frame\n *           key={item.id}\n *           initial={{ opacity: 0 }}\n *           animate={{ opacity: 1 }}\n *           exit={{ opacity: 0 }}\n *         />\n *       ))}\n *     </AnimatePresence>\n *   )\n * }\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * @motion\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\n\n\nvar AnimatePresence = function AnimatePresence(_a) {\n  var children = _a.children,\n      custom = _a.custom,\n      _b = _a.initial,\n      initial = _b === void 0 ? true : _b,\n      onExitComplete = _a.onExitComplete,\n      exitBeforeEnter = _a.exitBeforeEnter,\n      _c = _a.presenceAffectsLayout,\n      presenceAffectsLayout = _c === void 0 ? true : _c; // We want to force a re-render once all exiting animations have finished. We\n  // either use a local forceRender function, or one from a parent context if it exists.\n\n  var forceRender = useForceUpdate();\n  var layoutContext = useContext(SharedLayoutContext);\n\n  if (isSharedLayout(layoutContext)) {\n    forceRender = layoutContext.forceUpdate;\n  }\n\n  var isInitialRender = useRef(true); // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n\n  var filteredChildren = onlyElements(children); // Keep a living record of the children we're actually rendering so we\n  // can diff to figure out which are entering and exiting\n\n  var presentChildren = useRef(filteredChildren); // A lookup table to quickly reference components by key\n\n  var allChildren = useRef(new Map()).current; // A living record of all currently exiting components.\n\n  var exiting = useRef(new Set()).current;\n  updateChildLookup(filteredChildren, allChildren); // If this is the initial component render, just deal with logic surrounding whether\n  // we play onMount animations or not.\n\n  if (isInitialRender.current) {\n    isInitialRender.current = false;\n    return React.createElement(React.Fragment, null, filteredChildren.map(function (child) {\n      return React.createElement(PresenceChild, {\n        key: getChildKey(child),\n        isPresent: true,\n        initial: initial ? undefined : false,\n        presenceAffectsLayout: presenceAffectsLayout\n      }, child);\n    }));\n  } // If this is a subsequent render, deal with entering and exiting children\n\n\n  var childrenToRender = __spreadArray([], __read(filteredChildren)); // Diff the keys of the currently-present and target children to update our\n  // exiting list.\n\n\n  var presentKeys = presentChildren.current.map(getChildKey);\n  var targetKeys = filteredChildren.map(getChildKey); // Diff the present children with our target children and mark those that are exiting\n\n  var numPresent = presentKeys.length;\n\n  for (var i = 0; i < numPresent; i++) {\n    var key = presentKeys[i];\n\n    if (targetKeys.indexOf(key) === -1) {\n      exiting.add(key);\n    } else {\n      // In case this key has re-entered, remove from the exiting list\n      exiting.delete(key);\n    }\n  } // If we currently have exiting children, and we're deferring rendering incoming children\n  // until after all current children have exiting, empty the childrenToRender array\n\n\n  if (exitBeforeEnter && exiting.size) {\n    childrenToRender = [];\n  } // Loop through all currently exiting components and clone them to overwrite `animate`\n  // with any `exit` prop they might have defined.\n\n\n  exiting.forEach(function (key) {\n    // If this component is actually entering again, early return\n    if (targetKeys.indexOf(key) !== -1) return;\n    var child = allChildren.get(key);\n    if (!child) return;\n    var insertionIndex = presentKeys.indexOf(key);\n\n    var onExit = function onExit() {\n      allChildren.delete(key);\n      exiting.delete(key); // Remove this child from the present children\n\n      var removeIndex = presentChildren.current.findIndex(function (presentChild) {\n        return presentChild.key === key;\n      });\n      presentChildren.current.splice(removeIndex, 1); // Defer re-rendering until all exiting children have indeed left\n\n      if (!exiting.size) {\n        presentChildren.current = filteredChildren;\n        forceRender();\n        onExitComplete && onExitComplete();\n      }\n    };\n\n    childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, {\n      key: getChildKey(child),\n      isPresent: false,\n      onExitComplete: onExit,\n      custom: custom,\n      presenceAffectsLayout: presenceAffectsLayout\n    }, child));\n  }); // Add `MotionContext` even to children that don't need it to ensure we're rendering\n  // the same tree between renders\n\n  childrenToRender = childrenToRender.map(function (child) {\n    var key = child.key;\n    return exiting.has(key) ? child : React.createElement(PresenceChild, {\n      key: getChildKey(child),\n      isPresent: true,\n      presenceAffectsLayout: presenceAffectsLayout\n    }, child);\n  });\n  presentChildren.current = childrenToRender;\n\n  if (process.env.NODE_ENV !== \"production\" && exitBeforeEnter && childrenToRender.length > 1) {\n    console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n  }\n\n  return React.createElement(React.Fragment, null, exiting.size ? childrenToRender : childrenToRender.map(function (child) {\n    return cloneElement(child);\n  }));\n};\n\nexport { AnimatePresence };","import { __read } from 'tslib';\nimport { useCallback, useRef, useState } from 'react';\nimport { useUnmountEffect } from './use-unmount-effect.js';\n\nfunction useForceUpdate() {\n  var unloadingRef = useRef(false);\n\n  var _a = __read(useState(0), 2),\n      forcedRenderCount = _a[0],\n      setForcedRenderCount = _a[1];\n\n  useUnmountEffect(function () {\n    return unloadingRef.current = true;\n  });\n  return useCallback(function () {\n    !unloadingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n  }, [forcedRenderCount]);\n}\n\nexport { useForceUpdate };","import { __assign } from 'tslib';\nimport sync, { getFrameData } from 'framesync';\nimport { mix, progress, linear, mixColor, circOut } from 'popmotion';\nimport { animate } from '../../../animation/animate.js';\nimport { getValueTransition } from '../../../animation/utils/transitions.js';\nimport { motionValue } from '../../../value/index.js';\n\nfunction createCrossfader() {\n  /**\n   * The current state of the crossfade as a value between 0 and 1\n   */\n  var progress = motionValue(1);\n  var options = {\n    lead: undefined,\n    follow: undefined,\n    crossfadeOpacity: false,\n    preserveFollowOpacity: false\n  };\n\n  var prevOptions = __assign({}, options);\n\n  var leadState = {};\n  var followState = {};\n  /**\n   *\n   */\n\n  var _isActive = false;\n  /**\n   *\n   */\n\n  var finalCrossfadeFrame = null;\n  /**\n   * Framestamp of the last frame we updated values at.\n   */\n\n  var prevUpdate = 0;\n\n  function startCrossfadeAnimation(target, transition) {\n    var lead = options.lead,\n        follow = options.follow;\n    _isActive = true;\n    finalCrossfadeFrame = null;\n    var hasUpdated = false;\n\n    var onUpdate = function onUpdate() {\n      hasUpdated = true;\n      lead && lead.scheduleRender();\n      follow && follow.scheduleRender();\n    };\n\n    var _onComplete = function onComplete() {\n      _isActive = false;\n      /**\n       * If the crossfade animation is no longer active, flag a frame\n       * that we're still allowed to crossfade\n       */\n\n      finalCrossfadeFrame = getFrameData().timestamp;\n    };\n\n    transition = transition && getValueTransition(transition, \"crossfade\");\n    return animate(progress, target, __assign(__assign({}, transition), {\n      onUpdate: onUpdate,\n      onComplete: function onComplete() {\n        if (!hasUpdated) {\n          progress.set(target);\n          /**\n           * If we never ran an update, for instance if this was an instant transition, fire a\n           * simulated final frame to ensure the crossfade gets applied correctly.\n           */\n\n          sync.read(_onComplete);\n        } else {\n          _onComplete();\n        }\n\n        onUpdate();\n      }\n    }));\n  }\n\n  function updateCrossfade() {\n    var _a, _b;\n    /**\n     * We only want to compute the crossfade once per frame, so we\n     * compare the previous update framestamp with the current frame\n     * and early return if they're the same.\n     */\n\n\n    var timestamp = getFrameData().timestamp;\n    var lead = options.lead,\n        follow = options.follow;\n    if (timestamp === prevUpdate || !lead) return;\n    prevUpdate = timestamp;\n    /**\n     * Merge each component's latest values into our crossfaded state\n     * before crossfading.\n     */\n\n    var latestLeadValues = lead.getLatestValues();\n    Object.assign(leadState, latestLeadValues);\n    var latestFollowValues = follow ? follow.getLatestValues() : options.prevValues;\n    Object.assign(followState, latestFollowValues);\n    var p = progress.get();\n    /**\n     * Crossfade the opacity between the two components. This will result\n     * in a different opacity for each component.\n     */\n\n    var leadTargetOpacity = (_a = latestLeadValues.opacity) !== null && _a !== void 0 ? _a : 1;\n    var followTargetOpacity = (_b = latestFollowValues === null || latestFollowValues === void 0 ? void 0 : latestFollowValues.opacity) !== null && _b !== void 0 ? _b : 1;\n\n    if (options.crossfadeOpacity && follow) {\n      leadState.opacity = mix(\n      /**\n       * If the follow child has been completely hidden we animate\n       * this opacity from its previous opacity, but otherwise from completely transparent.\n       */\n      follow.isVisible !== false ? 0 : followTargetOpacity, leadTargetOpacity, easeCrossfadeIn(p));\n      followState.opacity = options.preserveFollowOpacity ? followTargetOpacity : mix(followTargetOpacity, 0, easeCrossfadeOut(p));\n    } else if (!follow) {\n      leadState.opacity = mix(followTargetOpacity, leadTargetOpacity, p);\n    }\n\n    mixValues(leadState, followState, latestLeadValues, latestFollowValues || {}, Boolean(follow), p);\n  }\n\n  return {\n    isActive: function isActive() {\n      return leadState && (_isActive || getFrameData().timestamp === finalCrossfadeFrame);\n    },\n    fromLead: function fromLead(transition) {\n      return startCrossfadeAnimation(0, transition);\n    },\n    toLead: function toLead(transition) {\n      var initialProgress = 0;\n\n      if (!options.prevValues && !options.follow) {\n        /**\n         * If we're not coming from anywhere, start at the end of the animation.\n         */\n        initialProgress = 1;\n      } else if (prevOptions.lead === options.follow && prevOptions.follow === options.lead) {\n        /**\n         * If we're swapping follow/lead we can reverse the progress\n         */\n        initialProgress = 1 - progress.get();\n      }\n\n      progress.set(initialProgress);\n      return startCrossfadeAnimation(1, transition);\n    },\n    reset: function reset() {\n      return progress.set(1);\n    },\n    stop: function stop() {\n      return progress.stop();\n    },\n    getCrossfadeState: function getCrossfadeState(element) {\n      updateCrossfade();\n\n      if (element === options.lead) {\n        return leadState;\n      } else if (element === options.follow) {\n        return followState;\n      }\n    },\n    setOptions: function setOptions(newOptions) {\n      prevOptions = options;\n      options = newOptions;\n      leadState = {};\n      followState = {};\n    },\n    getLatestValues: function getLatestValues() {\n      return leadState;\n    }\n  };\n}\n\nvar easeCrossfadeIn = compress(0, 0.5, circOut);\nvar easeCrossfadeOut = compress(0.5, 0.95, linear);\n\nfunction compress(min, max, easing) {\n  return function (p) {\n    // Could replace ifs with clamp\n    if (p < min) return 0;\n    if (p > max) return 1;\n    return easing(progress(min, max, p));\n  };\n}\n\nvar borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nvar numBorders = borders.length;\n\nfunction mixValues(leadState, followState, latestLeadValues, latestFollowValues, hasFollowElement, p) {\n  /**\n   * Mix border radius\n   */\n  for (var i = 0; i < numBorders; i++) {\n    var borderLabel = \"border\" + borders[i] + \"Radius\";\n    var followRadius = getRadius(latestFollowValues, borderLabel);\n    var leadRadius = getRadius(latestLeadValues, borderLabel);\n    if (followRadius === undefined && leadRadius === undefined) continue;\n    followRadius || (followRadius = 0);\n    leadRadius || (leadRadius = 0);\n    /**\n     * Currently we're only crossfading between numerical border radius.\n     * It would be possible to crossfade between percentages for a little\n     * extra bundle size.\n     */\n\n    if (typeof followRadius === \"number\" && typeof leadRadius === \"number\") {\n      var radius = Math.max(mix(followRadius, leadRadius, p), 0);\n      leadState[borderLabel] = followState[borderLabel] = radius;\n    }\n  }\n  /**\n   * Mix rotation\n   */\n\n\n  if (latestFollowValues.rotate || latestLeadValues.rotate) {\n    var rotate = mix(latestFollowValues.rotate || 0, latestLeadValues.rotate || 0, p);\n    leadState.rotate = followState.rotate = rotate;\n  }\n  /**\n   * We only want to mix the background color if there's a follow element\n   * that we're not crossfading opacity between. For instance with switch\n   * AnimateSharedLayout animations, this helps the illusion of a continuous\n   * element being animated but also cuts down on the number of paints triggered\n   * for elements where opacity is doing that work for us.\n   */\n\n\n  if (!hasFollowElement && latestLeadValues.backgroundColor && latestFollowValues.backgroundColor) {\n    /**\n     * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n     * We could probably create a mixer that runs at the start of the animation but\n     * the idea behind the crossfader is that it runs dynamically between two potentially\n     * changing targets (ie opacity or borderRadius may be animating independently via variants)\n     */\n    leadState.backgroundColor = followState.backgroundColor = mixColor(latestFollowValues.backgroundColor, latestLeadValues.backgroundColor)(p);\n  }\n}\n\nfunction getRadius(values, radiusName) {\n  var _a;\n\n  return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n\nexport { createCrossfader };","import { motionValue } from '../value/index.js';\nimport { isMotionValue } from '../value/utils/is-motion-value.js';\nimport { startAnimation } from './utils/transitions.js';\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\n\nfunction animate(from, to, transition) {\n  if (transition === void 0) {\n    transition = {};\n  }\n\n  var value = isMotionValue(from) ? from : motionValue(from);\n  startAnimation(\"\", value, to, transition);\n  return {\n    stop: function stop() {\n      return value.stop();\n    }\n  };\n}\n\nexport { animate };","import { __assign } from 'tslib';\nimport { Presence } from '../types.js';\nimport { elementDragControls } from '../../../gestures/drag/VisualElementDragControls.js';\nimport { createCrossfader } from './crossfader.js';\n\nfunction layoutStack() {\n  var stack = new Set();\n  var state = {\n    leadIsExiting: false\n  };\n\n  var prevState = __assign({}, state);\n\n  var prevValues;\n  var prevViewportBox;\n  var prevDragCursor;\n  var crossfader = createCrossfader();\n  var needsCrossfadeAnimation = false;\n\n  function getFollowViewportBox() {\n    return state.follow ? state.follow.prevViewportBox : prevViewportBox;\n  }\n\n  function getFollowLayout() {\n    var _a;\n\n    return (_a = state.follow) === null || _a === void 0 ? void 0 : _a.getLayoutState().layout;\n  }\n\n  return {\n    add: function add(element) {\n      element.setCrossfader(crossfader);\n      stack.add(element);\n      /**\n       * Hydrate new element with previous drag position if we have one\n       */\n\n      if (prevDragCursor) element.prevDragCursor = prevDragCursor;\n      if (!state.lead) state.lead = element;\n    },\n    remove: function remove(element) {\n      stack.delete(element);\n    },\n    getLead: function getLead() {\n      return state.lead;\n    },\n    updateSnapshot: function updateSnapshot() {\n      if (!state.lead) return;\n      prevValues = crossfader.isActive() ? crossfader.getLatestValues() : state.lead.getLatestValues();\n      prevViewportBox = state.lead.prevViewportBox;\n      var dragControls = elementDragControls.get(state.lead);\n\n      if (dragControls && dragControls.isDragging) {\n        prevDragCursor = dragControls.cursorProgress;\n      }\n    },\n    clearSnapshot: function clearSnapshot() {\n      prevDragCursor = prevViewportBox = undefined;\n    },\n    updateLeadAndFollow: function updateLeadAndFollow() {\n      var _a;\n\n      prevState = __assign({}, state);\n      var lead;\n      var follow;\n      var order = Array.from(stack);\n\n      for (var i = order.length; i--; i >= 0) {\n        var element = order[i];\n        if (lead) follow !== null && follow !== void 0 ? follow : follow = element;\n        lead !== null && lead !== void 0 ? lead : lead = element;\n        if (lead && follow) break;\n      }\n\n      state.lead = lead;\n      state.follow = follow;\n      state.leadIsExiting = ((_a = state.lead) === null || _a === void 0 ? void 0 : _a.presence) === Presence.Exiting;\n      crossfader.setOptions({\n        lead: lead,\n        follow: follow,\n        prevValues: prevValues,\n        crossfadeOpacity: (follow === null || follow === void 0 ? void 0 : follow.isPresenceRoot) || (lead === null || lead === void 0 ? void 0 : lead.isPresenceRoot)\n      });\n\n      if ( // Don't crossfade if we've just animated back from lead and switched the\n      // old follow to the new lead.\n      state.lead !== prevState.follow && (prevState.lead !== state.lead || prevState.leadIsExiting !== state.leadIsExiting)) {\n        needsCrossfadeAnimation = true;\n      }\n    },\n    animate: function animate(child, shouldCrossfade) {\n      var _a;\n\n      if (shouldCrossfade === void 0) {\n        shouldCrossfade = false;\n      }\n\n      if (child === state.lead) {\n        if (shouldCrossfade) {\n          /**\n           * Point a lead to itself in case it was previously pointing\n           * to a different visual element\n           */\n          child.pointTo(state.lead);\n        } else {\n          child.setVisibility(true);\n        }\n\n        var config = {};\n        var prevParent = (_a = state.follow) === null || _a === void 0 ? void 0 : _a.getProjectionParent();\n\n        if (prevParent) {\n          /**\n           * We'll use this to determine if the element or its layoutId has been reparented.\n           */\n          config.prevParent = prevParent;\n        }\n\n        if (child.presence === Presence.Entering) {\n          config.originBox = getFollowViewportBox();\n        } else if (child.presence === Presence.Exiting) {\n          config.targetBox = getFollowLayout();\n        }\n\n        if (needsCrossfadeAnimation) {\n          needsCrossfadeAnimation = false;\n          var transition = child.getDefaultTransition();\n          child.presence === Presence.Entering ? crossfader.toLead(transition) : crossfader.fromLead(transition);\n        }\n\n        child.notifyLayoutReady(config);\n      } else {\n        if (shouldCrossfade) {\n          state.lead && child.pointTo(state.lead);\n        } else {\n          child.setVisibility(false);\n        }\n      }\n    }\n  };\n}\n\nexport { layoutStack };","import { __extends, __assign } from 'tslib';\nimport * as React from 'react';\nimport { Presence } from './types.js';\nimport { layoutStack } from './utils/stack.js';\nimport { SharedLayoutContext } from '../../context/SharedLayoutContext.js';\nimport { MotionContext } from '../../context/MotionContext/index.js';\nimport { resetRotate } from './utils/rotate.js';\nimport { createBatcher } from './utils/batcher.js';\nimport { snapshotViewportBox } from '../../render/dom/projection/utils.js';\n/**\n * @public\n */\n\nvar AnimateSharedLayout = function (_super) {\n  __extends(AnimateSharedLayout, _super);\n\n  function AnimateSharedLayout() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * A list of all the children in the shared layout\n     */\n\n\n    _this.children = new Set();\n    /**\n     * As animate components with a defined `layoutId` are added/removed to the tree,\n     * we store them in order. When one is added, it will animate out from the\n     * previous one, and when it's removed, it'll animate to the previous one.\n     */\n\n    _this.stacks = new Map();\n    /**\n     * Track whether the component has mounted. If it hasn't, the presence of added children\n     * are set to Present, whereas if it has they're considered Entering\n     */\n\n    _this.hasMounted = false;\n    /**\n     * Track whether we already have an update scheduled. If we don't, we'll run snapshots\n     * and schedule one.\n     */\n\n    _this.updateScheduled = false;\n    /**\n     * Tracks whether we already have a render scheduled. If we don't, we'll force one with this.forceRender\n     */\n\n    _this.renderScheduled = false;\n    /**\n     * The methods provided to all children in the shared layout tree.\n     */\n\n    _this.syncContext = __assign(__assign({}, createBatcher()), {\n      syncUpdate: function syncUpdate(force) {\n        return _this.scheduleUpdate(force);\n      },\n      forceUpdate: function forceUpdate() {\n        // By copying syncContext to itself, when this component re-renders it'll also re-render\n        // all children subscribed to the SharedLayout context.\n        _this.syncContext = __assign({}, _this.syncContext);\n\n        _this.scheduleUpdate(true);\n      },\n      register: function register(child) {\n        return _this.addChild(child);\n      },\n      remove: function remove(child) {\n        return _this.removeChild(child);\n      }\n    });\n    return _this;\n  }\n\n  AnimateSharedLayout.prototype.componentDidMount = function () {\n    this.hasMounted = true;\n  };\n\n  AnimateSharedLayout.prototype.componentDidUpdate = function () {\n    this.startLayoutAnimation();\n  };\n\n  AnimateSharedLayout.prototype.shouldComponentUpdate = function () {\n    this.renderScheduled = true;\n    return true;\n  };\n\n  AnimateSharedLayout.prototype.startLayoutAnimation = function () {\n    var _this = this;\n    /**\n     * Reset update and render scheduled status\n     */\n\n\n    this.renderScheduled = this.updateScheduled = false;\n    var type = this.props.type;\n    /**\n     * Update presence metadata based on the latest AnimatePresence status.\n     * This is a kind of goofy way of dealing with this, perhaps there's a better model to find.\n     */\n\n    this.children.forEach(function (child) {\n      if (!child.isPresent) {\n        child.presence = Presence.Exiting;\n      } else if (child.presence !== Presence.Entering) {\n        child.presence = child.presence === Presence.Exiting ? Presence.Entering : Presence.Present;\n      }\n    });\n    this.updateStacks();\n    /**\n     * Create a handler which we can use to flush the children animations\n     */\n\n    var handler = {\n      layoutReady: function layoutReady(child) {\n        if (child.getLayoutId() !== undefined) {\n          var stack = _this.getStack(child);\n\n          stack.animate(child, type === \"crossfade\");\n        } else {\n          child.notifyLayoutReady();\n        }\n      },\n      parent: this.context.visualElement\n    };\n    /**\n     * Shared layout animations can be used without the AnimateSharedLayout wrapping component.\n     * This requires some co-ordination across components to stop layout thrashing\n     * and ensure measurements are taken at the correct time.\n     *\n     * Here we use that same mechanism of schedule/flush.\n     */\n\n    this.children.forEach(function (child) {\n      return _this.syncContext.add(child);\n    });\n    this.syncContext.flush(handler);\n    /**\n     * Clear snapshots so subsequent rerenders don't retain memory of outgoing components\n     */\n\n    this.stacks.forEach(function (stack) {\n      return stack.clearSnapshot();\n    });\n  };\n\n  AnimateSharedLayout.prototype.updateStacks = function () {\n    this.stacks.forEach(function (stack) {\n      return stack.updateLeadAndFollow();\n    });\n  };\n\n  AnimateSharedLayout.prototype.scheduleUpdate = function (force) {\n    if (force === void 0) {\n      force = false;\n    }\n\n    if (!(force || !this.updateScheduled)) return;\n    /**\n     * Flag we've scheduled an update\n     */\n\n    this.updateScheduled = true;\n    /**\n     * Write: Reset transforms so bounding boxes can be accurately measured.\n     */\n\n    this.children.forEach(function (child) {\n      resetRotate(child);\n      if (child.shouldResetTransform()) child.resetTransform();\n    });\n    /**\n     * Read: Snapshot children\n     */\n\n    this.children.forEach(snapshotViewportBox);\n    /**\n     * Every child keeps a local snapshot, but we also want to record\n     * snapshots of the visible children as, if they're are being removed\n     * in this render, we can still access them.\n     *\n     * TODO: What would be better here is doing a single loop where we\n     * only snapshotViewportBoxes of undefined layoutIds and then one for each stack\n     */\n\n    this.stacks.forEach(function (stack) {\n      return stack.updateSnapshot();\n    });\n    /**\n     * Force a rerender by setting state if we aren't already going to render.\n     */\n\n    if (force || !this.renderScheduled) {\n      this.renderScheduled = true;\n      this.forceUpdate();\n    }\n  };\n\n  AnimateSharedLayout.prototype.addChild = function (child) {\n    this.children.add(child);\n    this.addToStack(child);\n    child.presence = this.hasMounted ? Presence.Entering : Presence.Present;\n  };\n\n  AnimateSharedLayout.prototype.removeChild = function (child) {\n    this.scheduleUpdate();\n    this.children.delete(child);\n    this.removeFromStack(child);\n  };\n\n  AnimateSharedLayout.prototype.addToStack = function (child) {\n    var stack = this.getStack(child);\n    stack === null || stack === void 0 ? void 0 : stack.add(child);\n  };\n\n  AnimateSharedLayout.prototype.removeFromStack = function (child) {\n    var stack = this.getStack(child);\n    stack === null || stack === void 0 ? void 0 : stack.remove(child);\n  };\n  /**\n   * Return a stack of animate children based on the provided layoutId.\n   * Will create a stack if none currently exists with that layoutId.\n   */\n\n\n  AnimateSharedLayout.prototype.getStack = function (child) {\n    var id = child.getLayoutId();\n    if (id === undefined) return; // Create stack if it doesn't already exist\n\n    !this.stacks.has(id) && this.stacks.set(id, layoutStack());\n    return this.stacks.get(id);\n  };\n\n  AnimateSharedLayout.prototype.render = function () {\n    return React.createElement(SharedLayoutContext.Provider, {\n      value: this.syncContext\n    }, this.props.children);\n  };\n\n  AnimateSharedLayout.contextType = MotionContext;\n  return AnimateSharedLayout;\n}(React.Component);\n\nexport { AnimateSharedLayout };","import { transformAxes } from '../../../render/html/utils/transform.js';\n\nfunction resetRotate(child) {\n  // If there's no detected rotation values, we can early return without a forced render.\n  var hasRotate = false; // Keep a record of all the values we've reset\n\n  var resetValues = {}; // Check the rotate value of all axes and reset to 0\n\n  for (var i = 0; i < transformAxes.length; i++) {\n    var axis = transformAxes[i];\n    var key = \"rotate\" + axis; // If this rotation doesn't exist as a motion value, then we don't\n    // need to reset it\n\n    if (!child.hasValue(key) || child.getStaticValue(key) === 0) continue;\n    hasRotate = true; // Record the rotation and then temporarily set it to 0\n\n    resetValues[key] = child.getStaticValue(key);\n    child.setStaticValue(key, 0);\n  } // If there's no rotation values, we don't need to do any more.\n\n\n  if (!hasRotate) return; // Force a render of this element to apply the transform with all rotations\n  // set to 0.\n\n  child.syncRender(); // Put back all the values we reset\n\n  for (var key in resetValues) {\n    child.setStaticValue(key, resetValues[key]);\n  } // Schedule a render for the next frame. This ensures we won't visually\n  // see the element with the reset rotate value applied.\n\n\n  child.scheduleRender();\n}\n\nexport { resetRotate };","import { css } from '@emotion/react';\nimport { AnimatePresence, AnimateSharedLayout, motion } from 'framer-motion';\nimport { color, font, spacing } from '@/constants';\nimport { HeadingRow } from '@/elements';\nimport {\n  useTolCorrectCount,\n  useTolHandleAnswer,\n  useTolIncorrectCount,\n  useTolsToShow,\n} from '@/hooks';\nimport { TruthOrLieObjectType, TruthOrLieTruthynessType } from '@/types';\nimport { getLetterGrade } from '@/utils/get_letter_grade';\n\nconst scoreContainerCss = css`\n  position: relative;\n`;\n\nconst scorePlaceholderCss = css`\n  visibility: hidden;\n  z-index: -1000;\n`;\n\nconst scoreCss = css`\n  font-size: ${font.size.md};\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst tolRowCss = css`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  line-height: 1.6;\n`;\n\nconst statementCss = css`\n  font-size: ${font.size.md};\n  flex-grow: 1;\n`;\n\nconst chooserContainerCss = css`\n  width: 100px;\n  margin-right: ${spacing.xl};\n  vertical-align: middle;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst chooserOptionCss = css`\n  font-size: ${font.size.xl};\n  cursor: pointer;\n`;\n\nconst slashCss = css`\n  margin: 0 ${spacing.xl};\n  font-size: ${font.size.sm};\n  color: ${color.fontBaseLight};\n`;\n\nconst correctnessCss = css`\n  font-size: ${font.size.xl};\n`;\n\nexport const TruthsAndLies = () => {\n  const tolToShow = useTolsToShow();\n\n  return (\n    <div>\n      <HeadingRow level={2} title=\"Get to know the real me\" rightNode={<Score />} />\n      <div>\n        {tolToShow.map((tol) => (\n          <TruthOrLieRow key={tol.id} truthOrLie={tol} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst truthOrLieRowVariants = {\n  initial: {\n    opacity: 0,\n  },\n  animate: {\n    opacity: 1,\n    transition: {\n      delay: 0.6,\n      duration: 0.5,\n    },\n  },\n  exit: {\n    opacity: 0,\n  },\n};\n\ntype TruthOrLieRowProps = {\n  truthOrLie: TruthOrLieObjectType;\n};\n\nfunction TruthOrLieRow({ truthOrLie }: TruthOrLieRowProps) {\n  return (\n    <AnimatePresence>\n      <motion.div\n        css={tolRowCss}\n        key={truthOrLie.statement}\n        variants={truthOrLieRowVariants}\n        initial=\"initial\"\n        animate=\"animate\"\n        exit=\"exit\"\n      >\n        <TruthOrLieChooser truthOrLie={truthOrLie} />\n        <span css={statementCss}>{truthOrLie.statement}</span>\n        <TruthOrLieCorrectness truthOrLie={truthOrLie} />\n      </motion.div>\n    </AnimatePresence>\n  );\n}\n\ntype TruthOrLieChooserProps = {\n  truthOrLie: TruthOrLieObjectType;\n};\n\nconst HOVER_SCALE = 1.4;\nconst TRANS_DIST = 4;\n\nconst tolChooserVariants = {\n  noAnimation: {},\n  hoverLie: {\n    scale: HOVER_SCALE,\n    x: [0, -TRANS_DIST, TRANS_DIST, -TRANS_DIST, TRANS_DIST, 0],\n  },\n  hoverTruth: {\n    scale: HOVER_SCALE,\n    y: [0, TRANS_DIST, -TRANS_DIST, TRANS_DIST, -TRANS_DIST, 0],\n  },\n  tap: { scale: 0.9 },\n  exit: { opacity: 0, scale: 0.8, transition: { duration: 0.2 } },\n};\n\nfunction TruthOrLieChooser({ truthOrLie }: TruthOrLieChooserProps) {\n  const handleAnswer = useTolHandleAnswer();\n\n  const isAnswered = truthOrLie.userCorrectness !== 'unanswered';\n\n  // Only show option if the question is unanswered or if...\n  // the question is answered and the option was the correct answer\n  const showTruthOption = !isAnswered || truthOrLie.truthyness === 'truth';\n  const showFalseOption = !isAnswered || truthOrLie.truthyness === 'lie';\n\n  const handleClick = (userAnswer: TruthOrLieTruthynessType) => {\n    handleAnswer(truthOrLie.id, userAnswer);\n  };\n\n  return (\n    <div css={chooserContainerCss}>\n      <AnimateSharedLayout>\n        <AnimatePresence>\n          {showTruthOption && (\n            <TruthOption key=\"truth\" handleClick={handleClick} disableAnimations={isAnswered} />\n          )}\n          {!isAnswered && (\n            <motion.span key=\"/\" variants={tolChooserVariants} exit=\"exit\" css={slashCss}>\n              /\n            </motion.span>\n          )}\n          {showFalseOption && (\n            <LiarOption key=\"lie\" handleClick={handleClick} disableAnimations={isAnswered} />\n          )}\n        </AnimatePresence>\n      </AnimateSharedLayout>\n    </div>\n  );\n}\n\ntype AnswerButtonProps = {\n  handleClick: (answer: TruthOrLieTruthynessType) => void;\n  disableAnimations: boolean;\n};\n\nfunction TruthOption({ handleClick, disableAnimations }: AnswerButtonProps) {\n  return (\n    <motion.div\n      variants={tolChooserVariants}\n      whileHover={disableAnimations ? 'noAnimation' : 'hoverTruth'}\n      whileTap={disableAnimations ? 'noAnimation' : 'tap'}\n      exit={'exit'}\n      css={chooserOptionCss}\n      onClick={() => handleClick('truth')}\n      layout\n    >\n      😇\n    </motion.div>\n  );\n}\n\nfunction LiarOption({ disableAnimations, handleClick }: AnswerButtonProps) {\n  return (\n    <motion.div\n      variants={tolChooserVariants}\n      whileHover={disableAnimations ? 'noAnimation' : 'hoverLie'}\n      whileTap={disableAnimations ? 'noAnimation' : 'tap'}\n      exit={'exit'}\n      css={chooserOptionCss}\n      onClick={() => handleClick('lie')}\n      layout\n    >\n      😈\n    </motion.div>\n  );\n}\n\nconst scoreVariants = {\n  initial: {\n    y: -25,\n    opacity: 0,\n    scale: 0.2,\n  },\n  animate: {\n    y: 0,\n    opacity: 1,\n    scale: 1,\n    transition: {\n      delay: 0.6,\n    },\n  },\n  exit: {\n    scale: 0.2,\n    opacity: 0,\n    y: 20,\n    transition: {\n      delay: 0.5,\n    },\n  },\n};\n\nfunction Score() {\n  const correctCount = useTolCorrectCount();\n  const incorrectCount = useTolIncorrectCount();\n\n  if (!correctCount && !incorrectCount) return null;\n\n  const uniqueID = correctCount + incorrectCount;\n\n  const letterGrade = getLetterGrade(correctCount, incorrectCount);\n\n  return (\n    <div css={scoreContainerCss}>\n      {/* This div holds space so that the flexbox knows the size of the element and then the\n      the absolutely positioned motion.div has a correct parent reference for positioning */}\n      <div aria-hidden=\"true\" css={scorePlaceholderCss}>\n        {letterGrade}\n      </div>\n      <AnimatePresence>\n        <motion.div\n          key={uniqueID} // Causes unmount/remount when score changes\n          css={scoreCss}\n          style={{ zIndex: uniqueID }}\n          variants={scoreVariants}\n          initial=\"initial\"\n          animate=\"animate\"\n          exit=\"exit\"\n        >\n          {letterGrade}\n        </motion.div>\n      </AnimatePresence>\n    </div>\n  );\n}\n\nconst correctnessVariants = {\n  initial: {\n    opacity: 0,\n    scale: 0.5,\n  },\n  animate: {\n    opacity: 1,\n    scale: 1,\n    transition: {\n      delay: 0.3,\n    },\n  },\n};\n\ntype TruthOrLieCorrectnessProps = {\n  truthOrLie: TruthOrLieObjectType;\n};\n\nfunction TruthOrLieCorrectness({ truthOrLie }: TruthOrLieCorrectnessProps) {\n  if (truthOrLie.userCorrectness === 'unanswered') return null;\n\n  const userIsCorrect = truthOrLie.userCorrectness === 'correct';\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        variants={correctnessVariants}\n        initial=\"initial\"\n        animate=\"animate\"\n        css={correctnessCss}\n      >\n        {userIsCorrect ? '✅' : '❌'}\n      </motion.div>\n    </AnimatePresence>\n  );\n}\n","type LetterGradeType = `${'A' | 'B' | 'C' | 'D'}${'+' | '-' | ''}` | 'F';\n\nexport function getLetterGrade(correct: number, incorrect: number): LetterGradeType {\n  const percent = Math.round((correct / (correct + incorrect)) * 100);\n\n  let letter: 'A' | 'B' | 'C' | 'D' | 'F';\n  if (percent >= 100) {\n    return 'A+';\n  } else if (percent >= 90) {\n    letter = 'A';\n  } else if (percent >= 80) {\n    letter = 'B';\n  } else if (percent >= 70) {\n    letter = 'C';\n  } else if (percent >= 60) {\n    letter = 'D';\n  } else {\n    return 'F';\n  }\n\n  if (percent % 10 >= 7) {\n    return `${letter}+` as LetterGradeType;\n  } else if (percent % 10 >= 3) {\n    return letter;\n  } else {\n    return `${letter}-` as LetterGradeType;\n  }\n}\n","import React from 'react';\nimport { graphql, PageProps } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport { GlobalStyles } from '@/components/GlobalStyles';\nimport { PageBox } from '@/components/PageBox';\nimport { Projects } from '@/components/landing_page/Projects';\nimport { Bio } from '@/components/landing_page/Bio';\nimport { Blogs } from '@/components/landing_page/Blogs';\nimport { TruthsAndLies } from '@/components/landing_page/TruthsAndLies';\n\n// TODO: Figure out how to get this component to recognize data.allMdx\n// currently the \"data: any\" just ignores it\nconst Home: React.FC<PageProps> = ({ data }: { data: any }) => {\n  const posts = data.allMdx.nodes;\n  return (\n    <GlobalStyles>\n      <Helmet>\n        <title>Tyler Auer - Math teacher turned software developer</title>\n        <meta\n          name=\"description\"\n          content={`\"Stupid\" projects and ramblings about code and adventure.`}\n        />\n      </Helmet>\n      <PageBox includeHomeLink={false}>\n        <main>\n          <Bio />\n          <TruthsAndLies />\n          <Projects />\n          <Blogs posts={posts} />\n        </main>\n      </PageBox>\n    </GlobalStyles>\n  );\n};\n\nexport default Home;\n\nexport const codeFeaturedQuery = graphql`\n  query {\n    allMdx(filter: { frontmatter: { featured: { eq: true }, draft: { eq: false } } }) {\n      nodes {\n        fields {\n          blog\n          path\n        }\n        frontmatter {\n          category\n          date_created(formatString: \"MMMM D, YYYY\")\n          featured\n          location\n          subtitle\n          tags\n          title\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://tyler-auer-portfolio/./src/components/Flex.tsx","webpack://tyler-auer-portfolio/./src/components/bookshelf/BookshelfFilters.tsx","webpack://tyler-auer-portfolio/./node_modules/react-intersection-observer/react-intersection-observer.m.js","webpack://tyler-auer-portfolio/./src/components/bookshelf/BookModal.tsx","webpack://tyler-auer-portfolio/./src/components/bookshelf/BookshelfGrid.tsx","webpack://tyler-auer-portfolio/./src/hooks/useWindowWidth.tsx","webpack://tyler-auer-portfolio/./src/components/bookshelf/Bookshelf.tsx","webpack://tyler-auer-portfolio/./src/pages/bookshelf.tsx"],"names":["FlexJustification","Flex","children","flex","even","direction","wrap","align","id","className","sx","css","CONTAINER_SX","spacing","TOGGLE_SX","font","color","ACTIVE_TOGGLE_SX","INACTIVE_TOGGLE_SX","BookshelfFilters","toggleFilter","filterStates","btns","Object","keys","map","genre","Pill","key","state","content","onClick","Box","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","ObserverMap","Map","RootIds","WeakMap","rootId","optionsToId","options","sort","filter","undefined","root","has","set","toString","get","observe","element","callback","_createObserver","instance","thresholds","elements","observer","IntersectionObserver","entries","forEach","entry","_elements$get","inView","isIntersecting","some","threshold","intersectionRatio","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","unobserve","size","disconnect","isPlainChildren","props","InView","_React$Component","subClass","superClass","_this","node","_unobserveCb","handleNode","triggerOnce","skip","setState","initialInView","observeNode","handleChange","onChange","create","constructor","__proto__","_proto","componentDidUpdate","prevProps","rootMargin","delay","componentWillUnmount","_this$props","render","_this$state","ref","_this$props2","as","tag","excluded","sourceKeys","_objectWithoutPropertiesLoose","createElement","Component","displayName","defaultProps","MODAL_BG_SX","TITLE_SX","LINK_SX","AUTHOR_SX","DISMISS_SX","CONTENT_SX","COVER_SX","DETAILS_SX","BookModal","book","closeModal","G","alt","title","image","getImage","cover","level","author","pages","BookSiteLink","text","url","goodreads_url","indiebound_url","library_url","A","to","BookshelfGrid","activeFilters","books","useState","modalBook","setModalBook","windowWidth","width","setWidth","useEffect","getWindowWidth","window","innerWidth","addEventListener","removeEventListener","useWindowWidth","filteredBooks","values","isActive","genres","columnCount","Math","ceil","columnWidth","columnHeights","fill","columnsOfCovers","columnIndexForNextBook","getShortestColumnIndex","round","childImageSharp","resize","aspectRatio","col","gutterInPixels","BookCover","_temp","_ref","useRef","_React$useState","setRef","useCallback","current","result","useInView","motion","whileHover","scale","whileTap","transition","duration","initial","animate","variants","hidden","y","opacity","visible","heights","minIndex","minHeightSeen","Infinity","Error","INTRO_SX","Bookshelf","useStaticQuery","allBookDataJson","nodes","shuffledBooks","useMemo","fisherYatesShuffle","genresWithEnoughBooks","genreCounts","feature","getGenresWithEnoughBooks","generateInitialActiveFilterState","setActiveFilters","BookshelfHeader","filterToToggle","prev","s","Heading","IconNavList","includeHomeLink","P","GlobalStyles","styles","Helmet","name"],"mappings":"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","file":"component---src-pages-bookshelf-tsx-dcb98fc9fd71a9def594.js","sourcesContent":["import React from 'react';\nimport { css } from '@emotion/react';\n\nimport { ElementProps } from '@/types';\n\nexport enum FlexJustification {\n  split = 'space-between',\n  even = 'space-around',\n  center = 'center',\n  start = 'start',\n}\n\ntype Props = {\n  flex?: FlexJustification;\n  direction?: 'rows' | 'col';\n  wrap?: 'wrap' | 'nowrap' | 'wrap-reverse';\n  align?: 'center';\n} & ElementProps;\n\nexport const Flex: React.FC<Props> = ({\n  children,\n  flex = FlexJustification.even,\n  direction = 'row',\n  wrap = 'wrap',\n  align = 'center',\n  id,\n  className,\n  sx,\n}) => (\n  <div\n    id={id}\n    className={className}\n    css={css`\n      display: flex;\n      justify-content: ${flex};\n      flex-direction: ${direction};\n\n      ${wrap ? `flex-wrap: ${wrap};` : ''}\n      ${align ? `align-items: ${align};` : ''}\n      ${sx}\n    `}\n  >\n    {children}\n  </div>\n);\n","import { css } from '@emotion/react';\nimport { Box } from '@/elements/Box';\nimport { GenreFilterToggleStateType, GenresConst, GenreType } from '@/types';\nimport { Flex, FlexJustification } from '../Flex';\nimport { color, font, spacing } from '@/constants';\n\nconst CONTAINER_SX = css`\n  margin: ${spacing.huge} auto;\n`;\n\nconst TOGGLE_SX = css`\n  padding: ${spacing.md} ${spacing.xl};\n  margin: ${spacing.sm};\n  border: none;\n  border-radius: 20px;\n  font-size: ${font.size.xs};\n  color: ${color.fontBaseDark};\n  font-family: ${font.family.chip};\n  cursor: pointer;\n  transition: all 0.2s;\n`;\n\nconst ACTIVE_TOGGLE_SX = css`\n  background: ${color.bgPrimary};\n  &:hover {\n    background: ${color.bgPrimaryHover};\n    color: ${color.fontBaseDark};\n  }\n`;\n\nconst INACTIVE_TOGGLE_SX = css`\n  &:hover {\n    background: ${color.bgBaseHover};\n    color: ${color.fontBaseDark};\n  }\n`;\n\ntype BookshelfFilterProps = {\n  toggleFilter: (filter: GenreType) => void;\n  filterStates: GenreFilterToggleStateType;\n};\n\nexport const BookshelfFilters = ({ toggleFilter, filterStates }: BookshelfFilterProps) => {\n  const filtersWithEnoughBooks = Object.keys(filterStates) as GenreType[];\n  const btns = filtersWithEnoughBooks.map((genre) => {\n    return (\n      <Pill\n        key={genre}\n        state={filterStates[genre]}\n        content={genre}\n        onClick={() => toggleFilter(genre)}\n      />\n    );\n  });\n\n  return (\n    <Box sx={CONTAINER_SX}>\n      <Flex flex={FlexJustification.center}>{btns}</Flex>\n    </Box>\n  );\n};\n\ntype PillProps = {\n  content: string;\n  state: boolean;\n  onClick: () => void;\n};\n\nconst Pill = ({ onClick, state, content }: PillProps) => {\n  return (\n    <button css={[TOGGLE_SX, state ? ACTIVE_TOGGLE_SX : INACTIVE_TOGGLE_SX]} onClick={onClick}>\n      {content}\n    </button>\n  );\n};\n","import { createElement, Component, useRef, useState, useCallback, useEffect } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar ObserverMap = new Map();\nvar RootIds = new WeakMap();\nvar rootId = 0;\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(function (key) {\n    return options[key] !== undefined;\n  }).map(function (key) {\n    return key + \"_\" + (key === 'root' ? getRootId(options.root) : options[key]);\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  var id = optionsToId(options);\n  var instance = ObserverMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    var elements = new Map();\n    var thresholds;\n    var observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        var _elements$get; // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n\n\n        var inView = entry.isIntersecting && thresholds.some(function (threshold) {\n          return entry.intersectionRatio >= threshold;\n        }); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(function (callback) {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id: id,\n      observer: observer,\n      elements: elements\n    };\n    ObserverMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (!element) return function () {}; // An observer with the same options can be reused, so lets use this fact\n\n  var _createObserver = createObserver(options),\n      id = _createObserver.id,\n      observer = _createObserver.observer,\n      elements = _createObserver.elements; // Register the callback listener for this element\n\n\n  var callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements[\"delete\"](element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      ObserverMap[\"delete\"](id);\n    }\n  };\n}\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nvar InView = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.node = null;\n    _this._unobserveCb = null;\n\n    _this.handleNode = function (node) {\n      if (_this.node) {\n        // Clear the old observer, before we start observing a new element\n        _this.unobserve();\n\n        if (!node && !_this.props.triggerOnce && !_this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          _this.setState({\n            inView: !!_this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    };\n\n    _this.handleChange = function (inView, entry) {\n      if (inView && _this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        _this.unobserve();\n      }\n\n      if (!isPlainChildren(_this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    };\n\n    _this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node || this.props.skip) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin,\n        trackVisibility = _this$props.trackVisibility,\n        delay = _this$props.delay;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin,\n      // @ts-ignore\n      trackVisibility: trackVisibility,\n      // @ts-ignore\n      delay: delay\n    });\n  };\n\n  _proto.unobserve = function unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  };\n\n  _proto.render = function render() {\n    if (!isPlainChildren(this.props)) {\n      var _this$state = this.state,\n          inView = _this$state.inView,\n          entry = _this$state.entry;\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        tag = _this$props2.tag,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"as\", \"tag\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\"]);\n\n    return /*#__PURE__*/createElement(as || tag || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(Component);\n\nInView.displayName = 'InView';\nInView.defaultProps = {\n  threshold: 0,\n  triggerOnce: false,\n  initialInView: false\n};\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\nfunction useInView(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      threshold = _ref.threshold,\n      delay = _ref.delay,\n      trackVisibility = _ref.trackVisibility,\n      rootMargin = _ref.rootMargin,\n      root = _ref.root,\n      triggerOnce = _ref.triggerOnce,\n      skip = _ref.skip,\n      initialInView = _ref.initialInView;\n\n  var unobserve = useRef();\n\n  var _React$useState = useState({\n    inView: !!initialInView\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = useCallback(function (node) {\n    if (unobserve.current !== undefined) {\n      unobserve.current();\n      unobserve.current = undefined;\n    } // Skip creating the observer\n\n\n    if (skip) return;\n\n    if (node) {\n      unobserve.current = observe(node, function (inView, entry) {\n        setState({\n          inView: inView,\n          entry: entry\n        });\n\n        if (entry.isIntersecting && triggerOnce && unobserve.current) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve.current();\n          unobserve.current = undefined;\n        }\n      }, {\n        root: root,\n        rootMargin: rootMargin,\n        threshold: threshold,\n        // @ts-ignore\n        trackVisibility: trackVisibility,\n        // @ts-ignore\n        delay: delay\n      });\n    }\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, root, rootMargin, triggerOnce, skip, trackVisibility, delay]);\n  /* eslint-disable-next-line */\n\n  useEffect(function () {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView\n      });\n    }\n  });\n  var result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport default InView;\nexport { InView, observe, useInView };","import { css } from '@emotion/react';\nimport { getImage, GatsbyImage } from 'gatsby-plugin-image';\n\nimport { A } from '@/elements/A';\nimport { color, font } from '@/constants';\nimport { Heading } from '@/elements';\nimport { BookFromGQLType } from '@/types';\n\nconst MODAL_BG_SX = css`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  padding: 0;\n  margin: 0;\n  top: 0;\n  left: 0;\n  z-index: 100;\n  background-color: ${color.bgBaseTransparent(0.9)};\n  backdrop-filter: blur(10px);\n`;\n\nconst CONTAINER_SX = css`\n  // Just for vertical centering\n  // keep this separate to avoid wonky formatting when wrapping\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100%;\n`;\n\nconst TITLE_SX = css`\n  font-family: ${font.family.body};\n  color: ${color.fontPrimary};\n`;\n\nconst LINK_SX = css`\n  font-size: ${font.size.sm};\n\n  &:not(:first-of-type) {\n    margin-left: 1rem;\n  }\n`;\n\nconst AUTHOR_SX = css`\n  font-weight: ${font.weight.bold};\n  margin-bottom: 2rem;\n`;\n\nconst DISMISS_SX = css`\n  position: absolute;\n  right: 0;\n  top: 0;\n  color: ${color.fontPrimaryDark};\n  font-size: 4rem;\n  cursor: pointer;\n  margin: 0;\n  padding: 0;\n  line-height: 0;\n\n  &:hover {\n    color: ${color.fontPrimaryDark};\n  }\n`;\n\nconst CONTENT_SX = css`\n  width: 95%;\n  max-width: 900px;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: flex-start;\n  position: relative;\n  color: ${color.fontBase};\n`;\n\nconst COVER_SX = css`\n  width: 250px;\n  max-width: 95%;\n  margin: 0 3rem;\n  border-radius: 10px;\n`;\n\nconst DETAILS_SX = css`\n  width: 500px;\n  max-width: 95%;\n`;\n\ntype Props = {\n  book: BookFromGQLType;\n  closeModal: () => void;\n};\n\nexport const BookModal: React.FC<Props> = ({ book, closeModal }) => {\n  return (\n    <div css={MODAL_BG_SX} id=\"book-modal\">\n      <div css={CONTAINER_SX}>\n        <div css={CONTENT_SX}>\n          <div css={DISMISS_SX} onClick={closeModal}>\n            &times;\n          </div>\n          <GatsbyImage css={COVER_SX} alt={book.title} image={getImage(book.cover)} />\n          <div css={DETAILS_SX}>\n            <Heading level={2} sx={TITLE_SX}>\n              {book.title}\n            </Heading>\n            <div css={AUTHOR_SX}>{book.author}</div>\n            <div>{book.pages} pages</div>\n            <BookSiteLink text=\"Goodreads\" url={book.goodreads_url} />\n            <BookSiteLink text=\"IndieBound\" url={book.indiebound_url} />\n            <BookSiteLink text=\"Library\" url={book.library_url} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype BookSiteLinkProps = {\n  text: string;\n  url: string;\n};\n\nconst BookSiteLink = ({ text, url }: BookSiteLinkProps) => (\n  <A sx={LINK_SX} to={url}>\n    {text}\n  </A>\n);\n","import React, { useState } from 'react';\nimport { getImage, GatsbyImage } from 'gatsby-plugin-image';\nimport { css } from '@emotion/react';\nimport { useInView } from 'react-intersection-observer';\nimport { motion } from 'framer-motion';\n\nimport { BookModal } from './BookModal';\nimport { useWindowWidth } from '@/hooks/useWindowWidth';\n\nimport { GenreFilterToggleStateType, BookFromGQLType } from '@/types';\n\ntype BookshelfGridProps = {\n  activeFilters: GenreFilterToggleStateType;\n  books: BookFromGQLType[];\n};\n\nexport const BookshelfGrid = ({ activeFilters, books }: BookshelfGridProps) => {\n  const [modalBook, setModalBook] = useState(null);\n  const windowWidth = useWindowWidth();\n\n  const closeModal = () => setModalBook(null);\n\n  // Don't render anything until the window width is known\n  if (windowWidth === 0) {\n    return null;\n  }\n\n  let filteredBooks = [];\n  const isAnyFilterActive = Object.values(activeFilters).some((isActive) => isActive);\n  if (isAnyFilterActive) {\n    for (let book of books) {\n      for (let genre of book.genres) {\n        if (activeFilters[genre]) {\n          filteredBooks.push(book);\n          break;\n        }\n      }\n    }\n  } else {\n    // If no filters are active, show all books\n    filteredBooks = books;\n  }\n\n  // Design preferences\n  const gutterInPixels = 10;\n  const maximumColumnWidth = 200;\n\n  // Compute columns values and generate arrays to hold heights and objects\n  const columnCount = Math.ceil(windowWidth / maximumColumnWidth);\n  const columnWidth = windowWidth / columnCount;\n  const columnHeights = new Array(columnCount).fill(0);\n  const columnsOfCovers = new Array(columnCount).fill(null).map(() => Array(0));\n\n  // Populate columns with appropriate books\n  for (let book of filteredBooks) {\n    const columnIndexForNextBook = getShortestColumnIndex(columnHeights);\n\n    // Add book to correct column\n    columnsOfCovers[columnIndexForNextBook].push(book);\n\n    // Adjust the height of column (include gutter)\n    columnHeights[columnIndexForNextBook] +=\n      Math.round(columnWidth / book.cover.childImageSharp.resize.aspectRatio) + gutterInPixels;\n  }\n\n  return (\n    <>\n      {modalBook && <BookModal book={modalBook} closeModal={closeModal} />}\n      <section\n        css={css`\n          display: flex;\n          align-items: flex-start;\n        `}\n      >\n        {columnsOfCovers.map((col, i) => (\n          <div\n            key={`column-${i}`}\n            css={css`\n              width: ${columnWidth}px;\n              display: inline-block;\n              margin: 0 ${gutterInPixels / 2}px;\n            `}\n          >\n            {col.map((book) => (\n              <BookCover key={book.title} book={book} setModalBook={setModalBook} />\n            ))}\n          </div>\n        ))}\n      </section>\n    </>\n  );\n};\n\ntype BookCoverProps = {\n  book: BookFromGQLType;\n  setModalBook: (book: BookFromGQLType) => void;\n};\n\nconst BookCover: React.FC<BookCoverProps> = ({ book, setModalBook }) => {\n  const [ref, inView] = useInView({ triggerOnce: true });\n\n  const covers = {\n    hidden: { y: 20, opacity: 0 },\n    visible: { y: 0, opacity: 1, transition: { duration: 0.2 } },\n  };\n\n  return (\n    <motion.div\n      ref={ref}\n      whileHover={{ scale: 1.03 }}\n      whileTap={{ scale: 0.97 }}\n      transition={{ duration: 0.1 }}\n      initial=\"hidden\"\n      animate={inView ? 'visible' : 'hidden'}\n      variants={covers}\n    >\n      <GatsbyImage\n        key={book.title}\n        alt={book.title}\n        image={getImage(book.cover)}\n        onClick={() => setModalBook(book)}\n        css={css`\n          cursor: pointer;\n        `}\n      />\n    </motion.div>\n  );\n};\n\nconst getShortestColumnIndex = (heights: number[]): number => {\n  let minIndex = -1;\n  let minHeightSeen = Infinity;\n\n  for (let i = 0; i < heights.length; i++) {\n    if (heights[i] < minHeightSeen) {\n      minHeightSeen = heights[i];\n      minIndex = i;\n    }\n  }\n\n  if (minIndex === -1 || minHeightSeen === Infinity) {\n    throw new Error('Invalid computation of shortest column height');\n  }\n\n  return minIndex;\n};\n","import { useEffect, useState } from 'react';\n\nexport const useWindowWidth = () => {\n  const [width, setWidth] = useState(0);\n\n  // Triggers dimension update when window changes\n  useEffect(() => {\n    const getWindowWidth = () => setWidth(window.innerWidth);\n\n    // Needs to be called to get the dimensions when the reference first mounts\n    getWindowWidth();\n\n    // Adds event listener to get new dimensions when window changes\n    window.addEventListener('resize', getWindowWidth);\n\n    return () => {\n      window.removeEventListener('resize', getWindowWidth);\n    };\n  }, []);\n\n  return width;\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { css } from '@emotion/react';\n\nimport { BookshelfFilters } from '@/components/bookshelf/BookshelfFilters';\nimport { BookshelfGrid } from '@/components/bookshelf/BookshelfGrid';\nimport { IconNavList } from '@/components/IconNavList';\nimport { Box } from '@/elements/Box';\n\nimport { fisherYatesShuffle } from '../../utils/fisher_yates_shuffle';\nimport { GenreFilterToggleStateType, GenresConst, GenreType, BookFromGQLType } from '@/types';\nimport { Heading } from '@/elements/Heading';\nimport { P } from '@/elements/P';\nimport { font, feature } from '@/constants';\n\nconst INTRO_SX = css`\n  font-size: ${font.size.sm};\n`;\n\nexport const Bookshelf: React.FC = () => {\n  const query = useStaticQuery(graphql`\n    {\n      allBookDataJson {\n        nodes {\n          cover {\n            childImageSharp {\n              gatsbyImageData(width: 450, placeholder: DOMINANT_COLOR)\n              resize {\n                aspectRatio\n              }\n            }\n            name\n          }\n          genres\n          author\n          title\n          pages\n          goodreads_url\n          indiebound_url\n          library_url\n        }\n      }\n    }\n  `);\n  const books: BookFromGQLType[] = query.allBookDataJson.nodes;\n  const shuffledBooks = useMemo(() => fisherYatesShuffle(books), [books]);\n  const [activeFilters, setActiveFilters] = useState(generateInitialActiveFilterState(books));\n\n  const toggleFilter = (filterToToggle: GenreType) => {\n    setActiveFilters((prev) => ({\n      ...prev,\n      [filterToToggle]: !prev[filterToToggle],\n    }));\n  };\n\n  return (\n    <>\n      <BookshelfHeader />\n      <BookshelfFilters toggleFilter={toggleFilter} filterStates={activeFilters} />\n      <BookshelfGrid activeFilters={activeFilters} books={shuffledBooks} />\n    </>\n  );\n};\n\nconst BookshelfHeader: React.FC = () => {\n  const s = css`\n    text-align: center;\n\n    & p {\n      text-align: left;\n    }\n  `;\n\n  return (\n    <div css={s}>\n      <Heading level={1}>Tyler's Bookshelf</Heading>\n      <IconNavList includeHomeLink />\n      <Box>\n        <P sx={INTRO_SX}>\n          I love reading and discussing books. So, it just felt right to throw together a list of\n          some of my favorites for others to peruse.\n        </P>\n        <P sx={INTRO_SX}>\n          My favorite genres are sci-fi, fantasy, graphic novels, and nonfiction adventure. I read\n          around a book a week and am always trying to read more books than my wife in a year. I was\n          close in 2020, but she's crushed me every other year.\n        </P>\n      </Box>\n    </div>\n  );\n};\n\n// Grabs each genre and populates and object\n// with each genre as the key and the value set to false\nfunction generateInitialActiveFilterState(books: BookFromGQLType[]): GenreFilterToggleStateType {\n  const genresWithEnoughBooks = getGenresWithEnoughBooks(books);\n  const state = {};\n  genresWithEnoughBooks.forEach((genre) => {\n    state[genre] = false;\n  });\n  return state as GenreFilterToggleStateType; // TS doesn't understand my genius, so override it\n}\n\nfunction getGenresWithEnoughBooks(books: BookFromGQLType[]): GenreType[] {\n  // Counts books with each genre\n  const genreCounts = {};\n  books.forEach((book) => {\n    book.genres.forEach((genre: GenreType) => {\n      if (!genreCounts[genre]) genreCounts[genre] = 0;\n      genreCounts[genre]++;\n    });\n  });\n\n  // Filters out genres without enough books\n  return Object.keys(genreCounts).filter(\n    (genre) => genreCounts[genre] > feature.MINIMUM_GENRE_FOR_FILTER_TO_DISPLAY,\n  ) as GenreType[];\n}\n","import { Global, css } from '@emotion/react';\nimport { Helmet } from 'react-helmet';\n\nimport { GlobalStyles } from '@/components/GlobalStyles';\nimport { Bookshelf } from '@/components/bookshelf/Bookshelf';\n\nconst BookshelfPage: React.FC = () => (\n  <GlobalStyles>\n    <Global\n      styles={css`\n        body {\n          overflow-y: scroll;\n        }\n      `}\n    />\n    <Helmet>\n      <title>Bookshelf - Tyler Auer</title>\n      <meta name=\"description\" content=\"Tyler's favorite books\" />\n    </Helmet>\n    <main>\n      <Bookshelf />\n    </main>\n  </GlobalStyles>\n);\n\nexport default BookshelfPage;\n"],"sourceRoot":""}